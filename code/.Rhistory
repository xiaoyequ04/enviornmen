glm_local_total <- glm(participate ~ eva_local_z + pollut_perse  + efficacyIn + efficacyEx + res_classr + enCare + age + female + edu + socailLevel_now  + imcomePer_level + party + race + rural + health + marriage + media,data = cgss2021,family = binomial)
mlist_total_local_participate <-  list(
"直接效应" = glm_local2participate,
"内部效能感" = glm_local_total_In,
"外部效能感" = glm_local_total_Ex,
"责任感归因" = glm_local_total_res,
"环境感知" = glm_local_total_per,
"环境关注度" = glm_local_total_care,
"总模型" = glm_local_total
)
modelsummary(mlist_total_local_participate,
stars = TRUE,
coef_rename = cm)
glm_cen2participate <- glm(participate ~ eva_central_z + age + female + edu + socailLevel_now  + imcomePer_level  + party + race + rural + health + marriage + media,data = cgss2021,family = binomial)
lm_cen2care <- lm(enCare ~ eva_central_z + age + female + edu + socailLevel_now + imcomePer_level  + party + race + rural + health + marriage + media,data = cgss2021)
glm_cen_total_care <- glm(participate ~ eva_central_z + enCare + age + female + edu + socailLevel_now + imcomePer_level  + party + race + rural + health + marriage + media,data = cgss2021,family = binomial)
lm_cen2efficacyIn <- lm(efficacyIn ~ eva_central_z + age + female + edu + socailLevel_now + imcomePer_level  + party + race + rural + health + marriage + media,data = cgss2021)
glm_cen_total_In <- glm(participate ~ eva_central_z + efficacyIn + age + female + edu + socailLevel_now + imcomePer_level  + party + race + rural + health + marriage + media,data = cgss2021,family = binomial)
lm_cen2efficacyEx <- lm(efficacyEx ~ eva_central_z + age + female + edu + socailLevel_now  + imcomePer_level  + party + race + rural + health + marriage,data = cgss2021)
glm_cen_total_Ex <- glm(participate ~ eva_central_z + efficacyEx + age + female + edu + socailLevel_now + imcomePer_level  + party + race + rural + health + marriage + media,data = cgss2021,family = binomial)
lm_cen2res <- lm(res_classr ~ eva_central_z + age + female + edu + socailLevel_now + imcomePer_level  + party + race + rural + health + marriage + media,data = cgss2021)
glm_cen_total_res <- glm(participate ~ eva_central_z + res_classr + age + female + edu + socailLevel_now  + imcomePer_level  + party + race + rural + health + marriage + media,data = cgss2021,family = binomial)
lm_cen2per <- lm(pollut_perse ~ eva_central_z + age + female + edu + socailLevel_now  + imcomePer_level + party + race + rural + health + marriage + media,data = cgss2021)
glm_cen_total_per <- glm(participate ~ eva_central_z + pollut_perse + age + female + edu + socailLevel_now  + imcomePer_level + party + race + rural + health + marriage + media,data = cgss2021,family = binomial)
glm_cen_total <- glm(participate ~ eva_central_z + pollut_perse  + efficacyIn + efficacyEx + res_classr + enCare + age + female + edu + socailLevel_now  + imcomePer_level + party + race + rural + health + marriage + media,data = cgss2021,family = binomial)
mlist_mediator_cen <- list(
"内部效能感" = lm_cen2efficacyIn,
"外部效能感" = lm_cen2efficacyEx,
"责任感归因" = lm_cen2res,
"环境感知" = lm_cen2per,
"环境关注度" = lm_cen2care
)
modelsummary(mlist_mediator_cen,
stars = TRUE,
coef_omit = "(Intercept)",
coef_rename = cm)
mlist_total_cen <- list(
"直接效应" = glm_cen2participate,
"内部效能感" = glm_cen_total_In,
"外部效能感" = glm_cen_total_Ex,
"责任感归因" = glm_cen_total_res,
"环境感知" = glm_cen_total_per,
"环境关注度" = glm_cen_total_care,
"总模型" = glm_cen_total
)
modelsummary(mlist_total_cen,
stars = TRUE,
coef_omit = "(Intercept)",
coef_rename = cm)
med_cen_care_parti <- mediation::mediate(
model.m = lm_cen2care,
model.y = glm_cen_total,
treat = "eva_central_z",
mediator = "enCare",
sims = 1000,
robustSE = TRUE,
dropobs = TRUE)
med_cen_In_parti <- mediation::mediate(
model.m = lm_cen2efficacyIn,
model.y = glm_cen_total,
treat = "eva_central_z",
mediator = "efficacyIn",
sims = 1000,
robustSE = TRUE,
dropobs = TRUE)
med_cen_per_parti <- mediation::mediate(
model.m = lm_cen2per,
model.y = glm_cen_total,
treat = "eva_central_z",
mediator = "pollut_perse",
sims = 1000,
robustSE = TRUE,
dropobs = TRUE)
med_cen_res_parti <- mediation::mediate(
model.m = lm_cen2res,
model.y = glm_cen_total,
treat = "eva_central_z",
mediator = "res_classr",
sims = 1000,
robustSE = TRUE,
dropobs = TRUE)
df_cen_care_parti <- tibble(
mediator = med_cen_care_parti$mediator,
effect = "aceB",
estimate = med_cen_care_parti$d.avg,
p.value = med_cen_care_parti$d.avg.p,
conf.low = med_cen_care_parti$d.avg.ci[1],
conf.high = med_cen_care_parti$d.avg.ci[2],
prop = scales::percent(med_cen_care_parti$n.avg)) %>%
bind_rows(
tibble(
mediator = med_cen_care_parti$mediator,
effect = "ade",
estimate = med_cen_care_parti$z.avg,
p.value = med_cen_care_parti$z.avg.p,
conf.low = med_cen_care_parti$z.avg.ci[1],
conf.high = med_cen_care_parti$z.avg.ci[2],
prop = "")
) %>%
bind_rows(
tibble(
mediator = med_cen_care_parti$mediator,
effect = "total",
estimate = med_cen_care_parti$tau.coef,
p.value = med_cen_care_parti$tau.p,
conf.low = med_cen_care_parti$tau.ci[1],
conf.high = med_cen_care_parti$tau.ci[2],
prop = "")
)
df_cen_In_parti <- tibble(
mediator = med_cen_In_parti$mediator,
effect = "aceB",
estimate = med_cen_In_parti$d.avg,
p.value = med_cen_In_parti$d.avg.p,
conf.low = med_cen_In_parti$d.avg.ci[1],
conf.high = med_cen_In_parti$d.avg.ci[2],
prop = scales::percent(med_cen_In_parti$n.avg)) %>%
bind_rows(
tibble(
mediator = med_cen_In_parti$mediator,
effect = "ade",
estimate = med_cen_In_parti$z.avg,
p.value = med_cen_In_parti$z.avg.p,
conf.low = med_cen_In_parti$z.avg.ci[1],
conf.high = med_cen_In_parti$z.avg.ci[2],
prop = "")
) %>%
bind_rows(
tibble(
mediator = med_cen_In_parti$mediator,
effect = "total",
estimate = med_cen_In_parti$tau.coef,
p.value = med_cen_In_parti$tau.p,
conf.low = med_cen_In_parti$tau.ci[1],
conf.high = med_cen_In_parti$tau.ci[2],
prop = "")
)
df_cen_res_parti <- tibble(
mediator = med_cen_res_parti$mediator,
effect = "aceB",
estimate = med_cen_res_parti$d.avg,
p.value = med_cen_res_parti$d.avg.p,
conf.low = med_cen_res_parti$d.avg.ci[1],
conf.high = med_cen_res_parti$d.avg.ci[2],
prop = scales::percent(med_cen_res_parti$n.avg)) %>%
bind_rows(
tibble(
mediator = med_cen_res_parti$mediator,
effect = "ade",
estimate = med_cen_res_parti$z.avg,
p.value = med_cen_res_parti$z.avg.p,
conf.low = med_cen_res_parti$z.avg.ci[1],
conf.high = med_cen_res_parti$z.avg.ci[2],
prop = "")
) %>%
bind_rows(
tibble(
mediator = med_cen_res_parti$mediator,
effect = "total",
estimate = med_cen_res_parti$tau.coef,
p.value = med_cen_res_parti$tau.p,
conf.low = med_cen_res_parti$tau.ci[1],
conf.high = med_cen_res_parti$tau.ci[2],
prop = "")
)
df_cen_per_parti <- tibble(
mediator = med_cen_per_parti$mediator,
effect = "aceB",
estimate = med_cen_per_parti$d.avg,
p.value = med_cen_per_parti$d.avg.p,
conf.low = med_cen_per_parti$d.avg.ci[1],
conf.high = med_cen_per_parti$d.avg.ci[2],
prop = scales::percent(med_cen_per_parti$n.avg)) %>%
bind_rows(
tibble(
mediator = med_cen_per_parti$mediator,
effect = "ade",
estimate = med_cen_per_parti$z.avg,
p.value = med_cen_per_parti$z.avg.p,
conf.low = med_cen_per_parti$z.avg.ci[1],
conf.high = med_cen_per_parti$z.avg.ci[2],
prop = "")
) %>%
bind_rows(
tibble(
mediator = med_cen_per_parti$mediator,
effect = "total",
estimate = med_cen_per_parti$tau.coef,
p.value = med_cen_per_parti$tau.p,
conf.low = med_cen_per_parti$tau.ci[1],
conf.high = med_cen_per_parti$tau.ci[2],
prop = "")
)
mediation_cen_parti <- df_cen_care_parti %>%
bind_rows(.,df_cen_In_parti,df_cen_per_parti,df_cen_res_parti)
df_mediation_cen_parti <- mediation_cen_parti %>%
filter(effect != "total") %>%
mutate(
across(where(is.numeric),~ round(.,3)),
sig = p.value < 0.05,
mediator_lab = rep(
c(
"环境关注度",
"环境效能感",
"环境感知度",
"责任归因"),
each = 2),
mediator_lab =
ifelse(effect == "aceB",
paste0(
mediator_lab,
"\n ",
estimate,
"\n [",
conf.low,
", ",
conf.high,
"]"),
paste0(
estimate,
"\n [",
conf.low,
", ",
conf.high,
"]"))
)
df_mediation_cen_parti <- df_mediation_cen_parti %>%
group_by(effect) %>%
mutate(estimate_abs = ifelse(p.value < 0.05, abs(estimate),0),
total = sum(estimate_abs),
propAceB = estimate_abs/total,
propAceB = scales::percent(propAceB),
prop = ifelse(sig, propAceB, ""),
arrow = ifelse(sig, propAceB, ""),
lineStyle = ifelse(sig, "solid", "dashed")
)
plot_mediation_cen2parti <- grViz(diagram =
"digraph {
graph [layout = dot, rankdir = LR]
node [shape = box]
edge [arrowhead = vee]
a [label = '对中央政府的评价']
b [label = '@@1-1']
c [label = '@@1-2']
d [label = '@@1-3']
e [label = '@@1-4']
g [label = '环境行为']
a -> b
a -> c
a -> d
a -> e
b -> g [style = '@@2-1', label = '@@3-1']
c -> g [style = '@@2-2', label = '@@3-2']
d -> g [style = '@@2-3', label = '@@3-3']
e -> g [style = '@@2-4', label = '@@3-4']
a -> g [style = 'dashed', label = '@@4-2'] #这里直接效应还存在，所以用实线，但这样的话没办法计算间接效应占比，看胡老师的另一篇文章。
}
[1]: df_mediation_cen_parti$mediator_lab[df_mediation_cen_parti$effect == 'aceB']
[2]: df_mediation_cen_parti$lineStyle[df_mediation_cen_parti$effect == 'aceB']
[3]: df_mediation_cen_parti$arrow[df_mediation_cen_parti$effect == 'aceB']
[4]: df_mediation_cen_parti$mediator_lab[df_mediation_cen_parti$effect == 'ade']
")
plot_mediation_cen2parti
#   export_svg() %>%
#   charToRaw() %>%
#   rsvg_png("../outputs/plot_mediation_cen2parti.png")
#
# include_graphics("../outputs/plot_mediation_cen2parti.png")
# summary(med)
#plot(med)
## sensetive analysis
# sens_out <- mediation::medsens(med,rho.by = 0.1,effect.type = "indirect",sims = 10)
# summary(sens_out)
# plot(sens_out)
df_cen_res_parti
View(df_mediation_cen_parti)
result_mediationPar[["责任感归因"]][["n.avg"]]
result_mediationPar[["环境感知"]][["n.avg"]]
result_mediationPar[["环境关注度"]][["n.avg"]]
result_mediationPar[["责任感归因"]][["d.avg"]]
result_mediationPar[["环境感知"]][["d.avg"]]
mlist_total[[2]]
result_cen2par <- map2(
mlist_cen2med,
ls_med,
~ mediation::mediate(
model.y = mlist_total[[1]],
model.m = .x,
treat = "eva_central_z",
mediator = .y,
boot = TRUE,
sims = 1000,
robustSE = TRUE,
dropobs = TRUE
)
)
result_cen2par <- map2(
mlist_cen2med,
ls_med,
~ mediation::mediate(
model.y = mlist_total[[1]],
model.m = .x,
treat = "eva_central_z",
mediator = .y,
#boot = TRUE,
sims = 1000,
robustSE = TRUE,
dropobs = TRUE
)
)
mediation_cen_parti <- df_cen_care_parti %>%
bind_rows(.,df_cen_In_parti,df_cen_per_parti,df_cen_res_parti)
View(mediation_cen_parti)
View(result_cen2par)
result_cen2par[["内部效能感"]][["d.avg"]]
result_cen2par[["环境关注度"]][["d.avg"]]
result_cen2par[["环境感知"]][["d.avg"]]
result_cen2par[["责任感归因"]][["d.avg"]]
set.seed(0609)
options (warn = -1)
# packbirth loading
library(pacman)
p_load("rio",
"here",
"scales",
"car",
"haven",
"MASS",
"modelsummary",
"bruceR",
"easystats",
"dotwhisker",
"DiagrammeR",
"purrr")
cgss2021 <- readRDS("../data/cgss2021.rds")
cgss2021$participate <- as.factor(cgss2021$participate)
modelsummary(mlist_total,
stars = TRUE,
coef_omit = "(Intercept)",
coef_rename = cm)
cgss2021 <- readRDS("../data/cgss2021.rds")
cgss2021$participate <- as.factor(cgss2021$participate)
#| label: regression
cm <-c(
eva_local_z = "对地方政府的评价",
eva_central_z = "对中央政府的评价",
efficacyIn = "内部环境效能感",
efficacyEx = "外部环境效能感",
res_classr = "责任归因",
pollut_perse = "环境感知度",
enCare = "环境关注度",
efficacyIn_std = "内部环境效能感(标准化)",
res_classr_std = "责任归因(标准化)",
pollut_perse_std = "环境感知度(标准化)",
enCare_std = "环境关注度(标准化)",
age = "年龄",
female = "性别",
party = "党派",
edu = "受教育程度",
socailLevel_now = "社会经济地位",
imcomePer_level = "个人收入",
race = "民族",
rural = "城镇户口",
health = "健康状况",
marriage = "婚姻状况",
media = "媒介使用",
trustSystem_z = "系统信任"
)
ls_iv <- c("eva_central_z","eva_local_z")
ls_med <- c(
"efficacyIn",
"enCare",
"res_classr",
"pollut_perse"
)
ls_med_std <- c(
"efficacyIn_std",
"enCare_std",
"res_classr_std",
"pollut_perse_std")
ls_ov <- c("action","participate")
ls_cv <-
c(
"edu",
"media",
"age",
"female",
"socailLevel_now",
"imcomePer_level",
"party",
"rural",
"health",
"race"
)
#| label: directeffect
ls_direct_parti <- paste(ls_cv,collapse = " + ") %>%
paste0("participate ~ ",ls_iv," + ",.)
glm_direct_parti <- map(ls_direct_parti, ~ glm(.,data = cgss2021,family = binomial))
names(glm_direct_parti) <- c("环境行为","环境行为")
modelsummary(glm_direct_parti,
stars = TRUE,
coef_omit = "(Intercept)",
coef_rename = cm)
fig1 <- dwplot(glm_direct_parti[[1]]) %>%
relabel_predictors(c(
eva_central_z = "对中央政府的评价",
# eva_local_z = "对地方政府的评价",
media = "媒体使用",
age = "年龄",
female = "性别",
party = "党派",
edu = "受教育程度",
socailLevel_now = "社会经济地位",
imcomePer_level = "个人收入",
race = "民族",
rural = "城镇户口",
health = "健康状况",
marriage = "婚姻状况")) +
geom_vline(xintercept = 0, colour = "grey60", linetype = 2) +
theme_bw(base_size = 4) +
xlab("相关系数") +
ylab("") +
ggtitle("中央政府评价对环境行为的影响") +
theme_set(theme_gray(base_family = "STKaiti")) +
labs(caption = "来源：2021年中国社会综合调查。") +
theme(legend.position = "none") +
scale_colour_grey(
start = .3,
end = .7)
fig1
#| label: cen2med
lm_med_cen <- paste(ls_cv,collapse = " + ") %>%
paste0(ls_med," ~ eva_central_z + ",.)
lm_cen2med <- map(lm_med_cen,~ lm(.,data = cgss2021))
names(lm_cen2med) <- c("环境效能感","环境关注度","责任归因","环境感知度")
modelsummary(lm_cen2med,
stars = TRUE,
coef_omit = "(Intercept)",
coef_rename = cm)
#| label: local2med
lm_med_local <- paste(ls_cv,collapse = " + ") %>%
paste0(ls_med," ~ eva_local_z + ",.)
lm_local2med <- map(lm_med_local,~ lm(.,data = cgss2021))
names(lm_local2med) <-  c("环境效能感","环境关注度","责任归因","环境感知度")
modelsummary(lm_local2med,
stars = TRUE,
coef_omit = "(Intercept)",
coef_rename = cm)
set.seed(1021)
options (warn = -1)
# packbirth loading
library(pacman)
p_load("rio",
"here",
"scales",
"car",
"haven",
"MASS",
"modelsummary",
"bruceR",
"easystats",
"dotwhisker",
"DiagrammeR")
#| lable: mediation analysis
lm_local2action <- lm(action ~ eva_local_z + age + female + edu + socailLevel_now  + imcomePer_level + party + race + rural + health + marriage+ media,data = cgss2021)
lm_local2perse <- lm(pollut_perse ~ eva_local_z + age + female + edu + socailLevel_now + imcomePer_level + party + race + rural + health + marriage + media,data = cgss2021)
lm_local2efficacyIn <- lm(efficacyIn ~ eva_local_z + age + female + edu + socailLevel_now + imcomePer_level  + party + race + rural + health + marriage+ media,data = cgss2021)
lm_local2efficacyEx <- lm(efficacyEx ~ eva_local_z + age + female + edu + socailLevel_now  + imcomePer_level  + party + race + rural + health + marriage+ media,data = cgss2021)
lm_local2res <- lm(res_classr ~ eva_local_z + age + female + edu + socailLevel_now  + imcomePer_level  + party + race + rural + health + marriage + media,data = cgss2021)
lm_local2care <- lm(enCare ~ eva_local_z + age + female + edu + socailLevel_now  + imcomePer_level + party + race + rural + health + marriage+ media,data = cgss2021)
lm_local_total_care <- lm(action ~ eva_local_z + enCare + age + female + edu + socailLevel_now + imcomePer_level  + party + race + rural + health + marriage+ media,data = cgss2021)
lm_local_total<- lm(action ~ eva_local_z + efficacyIn + res_classr + enCare + pollut_perse + age + female + edu + socailLevel_now  + imcomePer_level + party + race + rural + health + marriage+ media,data = cgss2021)
mlist_mediator_local <- list(
"内部效能感" = lm_local2efficacyIn,
"责任归因" = lm_local2res,
"环境关注度" = lm_local2care,
"环境感知" = lm_local2perse
)
modelsummary(mlist_mediator_local,
stars = TRUE,
coef_omit = "(Intercept)",
coef_rename = cm)
set.seed(0609)
options (warn = -1)
# packbirth loading
library(pacman)
p_load("rio",
"here",
"scales",
"car",
"haven",
"MASS",
"modelsummary",
"bruceR",
"easystats",
"dotwhisker",
"DiagrammeR",
"purrr")
cgss2021 <- readRDS("../data/cgss2021.rds")
cgss2021$participate <- as.factor(cgss2021$participate)
modelsummary(lm_local2med,
stars = TRUE,
coef_omit = "(Intercept)",
coef_rename = cm)
med_cen_care_parti <- mediation::mediate(
model.m = lm_cen2care,
model.y = glm_cen_total,
treat = "eva_central_z",
mediator = "enCare",
sims = 1000,
robustSE = TRUE,
dropobs = TRUE)
